apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "qbittorrent.fullname" . }}
  labels:
    {{- include "qbittorrent.labels" . | nindent 4 }}
  annotations:
    vpn-config-version: {{ .Values.vpn.config | sha256sum }}
spec:
  revisionHistoryLimit: {{ .Values.deployment.revisionHistoryLimit }}
  {{- .Values.rollout | toYaml | nindent 2 }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: {{ .Values.deployment.strategy.type }}
  selector:
    matchLabels:
      {{- include "qbittorrent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "qbittorrent.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "qbittorrent.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        {{- if .Values.vpn.enabled }}
        {{- if .Values.vpn.config  }}
        - name: wg-config
          configMap:
            name: {{ include "qbittorrent.fullname" . }}-wg
        {{- end }}
        - name: tunnel
          hostPath:
            path: /dev/net/tun
        {{- end }}
        - name: config
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "qbittorrent.fullname" .) }}
          {{- else }}
          emptyDir: { }
          {{- end }}
          {{- if .Values.persistence.additionalVolumes }}
            {{- .Values.persistence.additionalVolumes | toYaml | nindent 8}}
          {{- end }}
      {{- if and .Values.vpn.enabled .Values.vpn.config }}
      initContainers:
        - name: copy-config
          image: busybox:1.28
          volumeMounts:
            - mountPath: /src-config
              name: wg-config
            - mountPath: /config
              name: config
          command: [ "/bin/sh","-c" ]
          args:
            - echo "Copying over wg0.conf";
              set -ex;
              mkdir -p /config/wireguard/;
              cp /src-config/wg0.conf /config/wireguard/wg0.conf;
      {{- end }}
      containers:
        {{- if .Values.metrics.enabled }}
        - name: exporter
          image: "{{ .Values.metrics.exporter.image.repository }}:{{.Values.metrics.exporter.image.tag }}"
          imagePullPolicy: {{ .Values.metrics.exporter.image.pullPolicy }}
          env:
            - name: QBITTORRENT_HOST
              value: "http://localhost"
            - name: QBITTORRENT_PORT
              value: "8080"
            - name: QBITTORRENT_USER
              value: "{{ .Values.metrics.exporter.env.user }}"
            - name: QBITTORRENT_PASS
              value: "{{ .Values.metrics.exporter.env.password }}"
            - name: EXPORTER_PORT
              value: "{{ .Values.metrics.exporter.env.port }}"
            - name: EXPORTER_LOG_LEVEL
              value: "{{ .Values.metrics.exporter.env.logLevel }}"
          ports:
            - name: metrics
              containerPort: {{ .Values.metrics.exporter.env.port }}
        {{- end }}
        - name: {{ .Chart.Name }}
          env:
          {{- if .Values.vpn.enabled }}
            - name: VPN_ENABLED
              value: "true"
            - name: VPN_LAN_NETWORK
              value: {{ .Values.vpn.lanNetwork | quote }}
            - name: VPN_CONF
              value: {{ .Values.vpn.interface | quote }}
            - name: VPN_ADDITIONAL_PORTS
              value: {{ .Values.vpn.additionalPorts | quote }}
            - name: PRIVOXY_ENABLED
              value: {{ .Values.vpn.privoxy.enabled | quote }}
          {{- end }}
          {{- range $k,$v := .Values.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            {{- if .Values.vpn.enabled }}
            - name: tunnel
              mountPath: /dev/net/tun
              {{- end }}
            - mountPath: /config
              name: config
              {{- if .Values.persistence.additionalMounts }}
                {{- .Values.persistence.additionalMounts | toYaml | nindent 12 }}
              {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: bittorrent-tcp
              containerPort: {{ .Values.btService.port }}
              protocol: TCP
            - name: bittorrent-udp
              containerPort: {{ .Values.btService.port }}
              protocol: UDP
            {{- if .Values.vpn.privoxy.enabled }}
            - name: privoxy
              protocol: TCP
              containerPort: 8118
            {{- end }}
{{/*          livenessProbe:*/}}
{{/*            httpGet:*/}}
{{/*              path: /*/}}
{{/*              port: http*/}}
{{/*          readinessProbe:*/}}
{{/*            httpGet:*/}}
{{/*              path: /*/}}
{{/*              port: http*/}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
