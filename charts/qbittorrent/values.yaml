replicaCount: 1

image:
  repository: linuxserver/qbittorrent
  pullPolicy: IfNotPresent
  tag: "20.04.1"

deployment:
  # -- Number of replicaset revisions
  revisionHistoryLimit: 1
  # -- Rollout strategy type
  strategy:
    type: Recreate
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  # For WG enable config below
#  privileged: True
#  capabilities:
#    add:
#      - NET_ADMIN

# -- Rollout strategy type
rollout:
  strategy:
    type: Recreate

# configuration for the web ui service
webService:
  type: ClusterIP
  port: 80
  externalIps: []

# configuration for the bittorrent service
btService:
  type: ClusterIP
  # on which port qbittorrent should be listening for incoming connections
  port: 6881
  externalIps: []

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

env:
  PUID: "1000"
  PGID: "1000"
  TZ: "Europe/London"

persistence:
  storageClass: ""
  existingClaim: ""
  enabled: true
  accessMode: ReadWriteOnce
  size: 800Mi
  # if you need any additional volumes, you can define them here
  additionalVolumes: []
  # if you need any additional volume mounts, you can define them here
  additionalMounts: []

metrics:
  enabled: false
  serviceMonitor:
    enabled: false
    interval: 15s
    scrapeTimeout: 5s
    labels: {}
  prometheusRule:
    enabled: false
    labels: {}
    rules:
      []
      # - alert: qBittorrentDown
      #   annotations:
      #     description: qBittorrent service is down.
      #     summary: qBittorrent is down.
      #   expr: |
      #     qbittorrent_up == 0
      #   for: 5m
      #   labels:
    #     severity: critical
  exporter:
    image:
      repository: esanchezm/prometheus-qbittorrent-exporter
      tag: v1.6.0
      pullPolicy: IfNotPresent
    env:
      user: "admin"
      password: "adminadmin"
      port: 9022
      logLevel: INFO

vpn:
  enabled: false
  lanNetwork: ""
  interface: "wg0"
  additionalPorts: ""
  privoxy:
    enabled: false
    externalIps: []
  # -- If the config is not empty, it will be copied into `/config/wireguard/wg0.conf` with an init container
  config: ""
#  config: |
#    ## DO NOT EDIT, any changes will be overwritten
#    [Interface]
#    PrivateKey = <contents-of-server-privatekey>
#    Address = 10.0.0.1/24
#    ListenPort = 51820
#
#    [Peer]
#    PublicKey = <contents-of-client-publickey>
#    AllowedIPs = 0.0.0.0/0
